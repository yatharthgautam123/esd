module multiplexer(input a, input b, input c, input d, input s1, input s0, output Y);
    assign Y = ~s1&~s0&a | ~s1&s0&b | s1&~s0&c | s1&s0&d;
endmodule

module test;
    reg a,b,c,d,s1,s0;
    wire Y;
    multiplexer obj(a,b,c,d,s1,s0,Y);
    initial begin
    a=0;b=0;c=0;d=0;s1=0;s0=0;
    #20 a=0;b=0;c=0;d=0;s1=0;s0=1;
    #20 a=0;b=0;c=0;d=0;s1=1;s0=0;
    #20 a=0;b=0;c=0;d=0;s1=1;s0=1;
    #20 a=0;b=0;c=0;d=1;s1=0;s0=0;
    #20 a=0;b=0;c=0;d=1;s1=0;s0=1;
    #20 a=0;b=0;c=0;d=1;s1=1;s0=0;
    #20 a=0;b=0;c=0;d=1;s1=1;s0=1;
    #20 a=0;b=0;c=1;d=1;s1=0;s0=1;
    #20 a=0;b=0;c=1;d=0;s1=1;s0=0;
    #20 a=0;b=0;c=1;d=1;s1=1;s0=1;
    #20 a=0;b=1;c=0;d=1;s1=1;s0=1;
    #20 a=0;b=1;c=1;d=0;s1=1;s0=0;
    #20 a=0;b=1;c=1;d=1;s1=1;s0=1;
    #20 a=1;b=0;c=0;d=0;s1=1;s0=1;
    #20 a=1;b=1;c=0;d=1;s1=1;s0=1;
    #20 a=1;b=1;c=0;d=0;s1=0;s0=1;
    #20 $finish;
    end
    initial begin
    $monitor("a=%b, b=%b, c=%b, d=%b, s1=%b, s0=%b, | Y=%b\n", a,b,c,d,s1,s0,Y);
    end
endmodule
    
    
